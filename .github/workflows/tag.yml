name: Tag

on:
  push:
    tags:
      - 'v*'

jobs:

  tag:
    name: Create Release
    runs-on: ubuntu-latest
    steps:

    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set $TAG env var
      run: echo "${{github.ref}}" | sed 's/refs\/tags\///' | xargs -I $ echo "::set-env name=TAG::$"

    - name: Generate list of changes
      run: scripts/generate_release_notes.sh > .release.md

    - name: Create Github Release
      uses: actions/create-release@v1
      id: create-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body_path: ./.release.md

    - name: Export Upload URL
      run: echo "::set-output name=upload_url::${{ steps.create-release.outputs.upload_url }}"

  upload:
    name: Upload Release Artefacts
    needs: tag
    strategy:
      matrix:
        os:
          - linux
          - darwin
          - windows
        arch:
          - amd64
          - 386
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Generate build files
      uses: thatisuday/go-cross-build@v1
      with:
          platforms: ${{ matrix.os }}/${{ matrix.arch }}
          name: 'codeowners'
          compress: 'true'
          dest: 'dist'
          package: 'cmd/codeowners'

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.tag.outputs.upload_url }}
        asset_path: ./dist/codeowners-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
        asset_name: codeowners-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
        asset_content_type: application/gzip
